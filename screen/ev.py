# -*- coding: utf-8 -*-
"""ev.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bSY2oax4lmQVVkiuqL6e1C_iUy-JcBoN
"""


# Commented out IPython magic to ensure Python compatibility.
# %%writefile graph1.py
# 

def show_page_1():

  import streamlit as st
  import matplotlib.pyplot as plt
  import sqlite3
  import pandas as pd
  import matplotlib.font_manager as fm
  import numpy as np

  # 폰트 설정
  font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf'
  fontprop = fm.FontProperties(fname=font_path, size=10)
  plt.rcParams['font.family'] = 'NanumGothic'
  plt.rcParams['axes.unicode_minus'] = False
  #######################################################################################
  #######################################################################################
  # SQLite 메모리 DB 생성
  conn = sqlite3.connect(':memory:')

  # SQL 파일 읽기
  with open('/content/SQL/ev.sql', 'r', encoding='utf-8') as f:
      sql_script = f.read()

  # SQL 실행
  conn.executescript(sql_script)

  # 앱 제목
  st.title("지역별 전기차 & 충전소 비율 (파이차트)")

  # 연도 역순
  years = list(range(2025, 2019, -1))

  # ----------------------
  # 🔋 전기차 등록 수 탭
  # ----------------------
  tab1, tab2 = st.tabs(["전기차 등록 수", "충전소 수"])

  with tab1:
      st.subheader("1️⃣ 지역별 전기차 등록 수 비율")
      col1, col2 = st.columns(2)

      with col1:
          selected_year_ev = st.selectbox("연도 선택", years, key="ev_year")

      with col2:
          available_months_ev = [5] if selected_year_ev == 2025 else [6, 12]
          selected_month_ev = st.selectbox("월 선택", available_months_ev, key="ev_month")

      df_ev = pd.read_sql_query(f"""
          SELECT region, SUM(ev_count) as ev_total
          FROM ev
          WHERE year = {selected_year_ev} AND month = {selected_month_ev}
          GROUP BY region
      """, conn)

      if not df_ev.empty:
          fig1, ax1 = plt.subplots()
          ax1.pie(df_ev['ev_total'], labels=df_ev['region'], autopct='%1.1f%%', startangle=90)
          ax1.axis('equal')
          st.pyplot(fig1)
      else:
          st.warning("해당 연도/월의 전기차 데이터가 없습니다.")

  # ----------------------
  # ⚡ 충전소 수 탭
  # ----------------------
  with tab2:
      st.subheader("2️⃣ 지역별 충전소 수 비율")
      col3, col4 = st.columns(2)

      with col3:
          selected_year_charger = st.selectbox("연도 선택", years, key="charger_year")

      with col4:
          available_months_charger = [5] if selected_year_charger == 2025 else [6, 12]
          selected_month_charger = st.selectbox("월 선택", available_months_charger, key="charger_month")

      df_charger = pd.read_sql_query(f"""
          SELECT region, SUM(charger_count) as charger_total
          FROM charger
          WHERE year = {selected_year_charger} AND month = {selected_month_charger}
          GROUP BY region
      """, conn)

      if not df_charger.empty:
          fig2, ax2 = plt.subplots()
          ax2.pie(df_charger['charger_total'], labels=df_charger['region'], autopct='%1.1f%%', startangle=90)
          ax2.axis('equal')
          st.pyplot(fig2)
      else:
          st.warning("해당 연도/월의 충전소 데이터가 없습니다.")
